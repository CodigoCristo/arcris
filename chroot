#!/bin/bash

nombre_usuario=$(cat /etc/passwd | grep '/home' | cut -d: -f1) 

cmd=(dialog --no-collapse --cr-wrap --separate-output --checklist "Select options:" 22 76 16)
options=(1 "yay" off    # any option can be set to default to "on"
         2 "spotify" off
         3 "Google" off
         4 "gotop" off
         5 "sublime" off)
choices=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
clear
for choice in $choices
do
    case $choice in
        1)
            func_yaybin() {
                
            programaur="yay-bin"
            cd /home/$nombre_usuario
            git clone https://aur.archlinux.org/$programaur.git
            chown -R $nombre_usuario:users /home/$nombre_usuario/$programaur
            chown -R $nombre_usuario:users /home/$nombre_usuario/$programaur/PKGBUILD
            cd /home/$nombre_usuario/$programaur
            sudo -u $nombre_usuario makepkg -smp PKGBUILD --noconfirm
            pacman -U *.pkg.tar.xz --noconfirm
            rm -Rf /home/$nombre_usuario/$programaur
            cd
            }
            yaybin="$(func_yaybin)"
            ;;
        2)
            func_spotify() {
            programaur="spotify"
            dialog --no-collapse --cr-wrap --prgbox "cd /home/$nombre_usuario \
            && git clone https://aur.archlinux.org/$programaur.git \
            && chown -R $nombre_usuario:users /home/$nombre_usuario/$programaur \
            && chown -R $nombre_usuario:users /home/$nombre_usuario/$programaur/PKGBUILD \
            && cd /home/$nombre_usuario/$programaur \
            && sudo -u $nombre_usuario makepkg -smp PKGBUILD --noconfirm \
            && pacman -U *.pkg.tar.xz --noconfirm \
            && rm -Rf /home/$nombre_usuario/$programaur \
            && cd" 25 80
            }
            
            ;;
        3)
            func_googlechrome() {
            
            programaur="google-chrome"
            dialog --no-collapse --cr-wrap --prgbox "cd /home/$nombre_usuario \
            && git clone https://aur.archlinux.org/$programaur.git \
            && chown -R $nombre_usuario:users /home/$nombre_usuario/$programaur \
            && chown -R $nombre_usuario:users /home/$nombre_usuario/$programaur/PKGBUILD \
            && cd /home/$nombre_usuario/$programaur \
            && sudo -u $nombre_usuario makepkg -smp PKGBUILD --noconfirm \
            && pacman -U *.pkg.tar.xz --noconfirm \
            && rm -Rf /home/$nombre_usuario/$programaur \
            && cd" 25 80
            }
            
            ;;
        4)
            func_gotop() {
            
            programaur="gotop"
            cd /home/$nombre_usuario
            git clone https://aur.archlinux.org/$programaur.git
            chown -R $nombre_usuario:users /home/$nombre_usuario/$programaur 
            chown -R $nombre_usuario:users /home/$nombre_usuario/$programaur/PKGBUILD 
            cd /home/$nombre_usuario/$programaur 
            sudo -u $nombre_usuario makepkg -smp PKGBUILD --noconfirm
            pacman -U *.pkg.tar.xz
            rm -Rf /home/$nombre_usuario/$programaur
            cd
            }
            gotop="$(func_gotop)"
            ;;
        5)
            func_sublimetextdev() {
            
            programaur="sublime-text-dev"
            dialog --no-collapse --cr-wrap --prgbox "cd /home/$nombre_usuario \
            && git clone https://aur.archlinux.org/$programaur.git \
            && chown -R $nombre_usuario:users /home/$nombre_usuario/$programaur \
            && chown -R $nombre_usuario:users /home/$nombre_usuario/$programaur/PKGBUILD \
            && cd /home/$nombre_usuario/$programaur \
            && sudo -u $nombre_usuario makepkg -smp PKGBUILD --noconfirm \
            && pacman -U *.pkg.tar.xz --noconfirm \
            && rm -Rf /home/$nombre_usuario/$programaur \
            && cd" 25 80
            }
            
            ;;
    esac
done

dialog --no-collapse --cr-wrap --prgbox "/bin/bash -c '$gotop $yaybin'" 25 80



echo ""

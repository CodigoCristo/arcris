#!/bin/bash

encryptpartition () { 

#Desmontamos todo disco y swapoff
clear
umount -R /mnt
swapdisco=$( fdisk -l | grep "/dev/\|swap" | grep swap | awk -F ' ' '{print $1}' )
swapoff ${swapdisco}
clear
swapoff -a
swapon -a
rm /mnt/etc/fstab
clear 

part=""
disk=""
partitions=""



part="$(lsblk -lno NAME,SIZE,TYPE | grep 'disk' | awk '{print "/dev/" $1 " " $2}' | sort -u | sed '/f/d' | sed '/sr/d' )" 

disk=$(dialog --backtitle "${title}" --clear  --ok-label "Seleccionar disco" --no-cancel --menu "\nSelecciona el disco para Arch Linux\n " 12 45 0 ${part} 2>&1 >/dev/tty)

sizedisk="$(lsblk /dev/sda -lno NAME,SIZE,TYPE | grep 'disk' | awk '{print $1,$2}')"

inputs_diskmatch=false
          
while ! $inputs_diskmatch; do

input=$(dialog --backtitle "${title}" --title "-| Clave de Cifrado Disco |-" --clear \
  --stdout --nocancel --insecure --passwordbox "\nIngresa una clave Segura para ${sizedisk}:\n " 10 60)

confirm_input=$(dialog --backtitle "${title}" --title "-| Clave de Cifrado Disco |-" \
  --clear --stdout --insecure --no-cancel --passwordbox "\nConfirma su clave de ${sizedisk}:\n " 10 60)

if [ -z "$input" ]; then

  dialog --backtitle "${title}" --title "${title_passwusernull}" --msgbox "${msg_passwusernull}" 7 60

elif [ "$input" != "$confirm_input" ]; then

  dialog --backtitle "${title}" --title "${title_error}" --msgbox "${msg_passwuserfail}" 7 60
else
  diskpasswd=$input
  inputs_diskmatch=true
fi

done

echo $diskpasswd


bootarch=$( ls /sys/firmware/efi/ | grep -ic efivars )

if [[ $bootarch == 1 ]]; then
  tableboot="UEFI"
else
  tableboot="BIOS LEGACY"
fi

modprobe -a dm-mod dm_crypt

case $bootarch in

  1)

dialog --no-collapse --cr-wrap --backtitle "${title}" --title "-| Preparando Disco - UEFI |-" --stdout --ok-label "Siguiente" \
--prgbox "sgdisk --zap-all ${disk} && \
parted ${disk} mklabel gpt && \
sgdisk ${disk} -n=1:0:+250M -t=1:ef00 && \
sgdisk ${disk} -n=2:0:0 && \
fdisk -l ${disk} > /tmp/partitions && \
echo -------------------------------------- && \
cat /tmp/partitions" 20 110


partitions="$(cat /tmp/partitions | grep /dev/ | awk '{if (NR!=1) {print}}' | sed 's/*//g' | awk -F ' ' '{print $1}')"

echo $partitions | awk -F ' ' '{print $1}' >  boot-efi
echo $partitions | awk -F ' ' '{print $2}' >  root-efi
clear
Loading...
printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' _
echo ""
echo -n "$diskpasswd" | cryptsetup --verbose -c aes-xts-plain64 --pbkdf argon2id --type luks2 -y luksFormat "$(cat root-efi)"
echo -n "$diskpasswd" | cryptsetup luksOpen "$(cat root-efi)" archencrypt

dialog --no-collapse --cr-wrap --backtitle "${title}" --title "-| Formateo y Montar Particiones |-" --stdout --ok-label "Siguiente" \
--prgbox "mkfs.ext4 /dev/mapper/archencrypt && \
mount /dev/mapper/archencrypt /mnt && \
mkdir -p /mnt/boot && \
mkfs.fat -F 32 $(cat boot-efi) && \
mount $(cat boot-efi) /mnt/boot && \
echo -------------------------------------- && \
lsblk ${disk} --all" 20 110

diskencrypt=$(cat root-efi)

# rm boot-efi root-efi

clear
echo $diskencrypt
echo $diskpasswd

read line

;;

0)

;;

esac


clear
partprobe
clear




}